(defwidget bar []
  (box :orientation "h"
    (workspaces)
    (music)
    (sys-info)))

(deflisten workspaces :initial "[]" "bash ~/.config/eww/scripts/get-workspaces")
(deflisten current_workspace :initial "1" "bash ~/.config/eww/scripts/get-active-workspace")
(defwidget workspaces []
  (eventbox :onscroll "bash ~/.config/eww/scripts/change-active-workspace {} ${current_workspace}" :class "workspaces-widget"
    (box :hexpand false :space-evenly false :spacing "10"
      (label :text "${workspaces}${current_workspace}" :visible false)
      (for workspace in workspaces
        (button :class "workspace-entry" :onclick "hyprctl dispatch workspace ${workspace.id}"
          (box :class "${workspace.windows > 0 ? "occupied" : "empty"}"
            (label :text "${workspace.id == current_workspace ? "‚óè" : "‚óã" }"
                   :class "workspace-entry ${workspace.id == current_workspace ? "current" : ""}" )
            )
          )
        )
      )
    )
  )

(defwidget music []
  (box :class "music"
       :orientation "h"
       :space-evenly false
       :halign "center"
       (button 
            :onclick "playerctl play-pause"
            {music != "" ? "${playing != "Playing" ? "‚ñ∂" : "‚è∏Ô∏é"} ${music.artist} - ${music.title}" : ""})))

(defwidget sys-info []
    (box :orientation "h" :space-evenly false :spacing 32 :halign "end"
        (cpu)
        (ram)
        (gpu)
        (metric
            :class "${pipewire.muted ? "muted" : ""}" 
            :label "${pipewire.muted ? "Ôö©" : "ÔÄ® "}"
            :onclick "wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle"
            :onchange "wpctl set-volume @DEFAULT_AUDIO_SINK@ {}%"
            :value {pipewire.volume})
        (datetime)
    ))

;; TODO: Changer la couleur du texte en fonction de la valeur good, warning, danger
(defwidget cpu []
    (box :orientation "h" :space-evenly false :spacing 16
        (label :text "Ôãõ ${round(EWW_CPU.avg, 1)}%")
        (label :text "üå° ${round(EWW_TEMPS.K10TEMP_TCCD1, 1)}¬∞C")
    ))

(defwidget gpu []
    (box :orientation "h" :space-evenly false :spacing 16
        (label :text "GPU ${gpu.util}%")
        (label :text "üå° ${gpu.temp}¬∞C")
        (label :text "Ôî∏ ${gpu.mem_used}/${gpu.mem_total}M")
    ))

(defwidget ram []
    (box :orientation "h"
        (label :text "Ôî∏ ${round(EWW_RAM.used_mem_perc, 1)}%")
    ))

(defwidget datetime []
    (box :orientation "h"
        time
    ))

(defwidget metric [class label value onchange ?onclick]
  (box :orientation "h"
       :class "metric ${class}"
       :space-evenly false
    (button :onclick onclick :class "label" label)
    (scale :min 0
           :max 101
           :active {onchange != ""}
           :value value
           :onchange onchange)))

;; TODO: playing paused 
(deflisten music :initial ""
  "playerctl --follow metadata --format '\{ \"artist\": \"{{ artist }}\", \"title\": \"{{ title }}\" \}' || true")

(deflisten playing :initial ""
  "playerctl --follow status")

;; TODO: Check pour etre plugger direct sur la sauce
(defpoll pipewire :interval "1s"
  "~/.config/eww/scripts/get-pipewire-info")

(defpoll gpu :interval "2s"
  "~/.config/eww/scripts/gpu")

(defpoll time :interval "10s"
  "date '+%H:%M %b %d, %Y'")

(defwindow top-bar
  :monitor 0
  :windowtype "dock"
  :exclusive true
  :geometry (geometry :x "0%"
                      :y "0%"
                      :width "100%"
                      :height "40px"
                      :anchor "top center")
  :reserve (struts :side "top" :distance "4%")
  (bar))
