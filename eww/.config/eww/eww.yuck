(defwidget bar []
  (box :orientation "h"
    (workspaces)
    (music)
    (sys-info)
    ))

(deflisten workspaces :initial "[]" "bash ~/.config/eww/scripts/get-workspaces")
(deflisten current_workspace :initial "1" "bash ~/.config/eww/scripts/get-active-workspace")
(defwidget workspaces []
  (eventbox :onscroll "bash ~/.config/eww/scripts/change-active-workspace {} ${current_workspace}" :class "workspaces-widget"
    (box :hexpand false :space-evenly false :spacing "10"
      (label :text "${workspaces}${current_workspace}" :visible false)
      (for workspace in workspaces
        (eventbox :onclick "hyprctl dispatch workspace ${workspace.id}"
          (box :class "workspace-entry ${workspace.windows > 0 ? "occupied" : "empty"}"
            (label :text "${workspace.id == current_workspace ? "‚óè" : "‚óã" }"
                   :class "workspace-entry ${workspace.id == current_workspace ? "current" : ""}" )
            )
          )
        )
      )
    )
  )

(defwidget music []
  (box :class "music"
       :orientation "h"
       :space-evenly false
       :halign "center"
    {music != "" ? "üéµ ${music}" : ""}))

;; TODO: Ajouter les infos cpu, gpu, ram
(defwidget sys-info []
    (box :orientation "h" :space-evenly false :spacing "16px" :halign "end"
        (metric :label "üîä"
            :onchange "wpctl set-volume @DEFAULT_AUDIO_SINK@ {}%"
            :value volume)
        time
    ))

(defwidget metric [label value onchange]
  (box :orientation "h"
       :class "metric"
       :space-evenly false
    (box :class "label" label)
    (scale :min 0
           :max 101
           :active {onchange != ""}
           :value value
           :onchange onchange)))

;; TODO: playing paused 
(deflisten music :initial ""
  "playerctl --follow metadata --format '{{ artist }} - {{ title }}' || true")

;; TODO: Check pour etre plugger direct sur la sauce
(defpoll volume :interval "1s"
  "wpctl get-volume @DEFAULT_AUDIO_SINK@ | grep -oP '\\d+\\.?\\d*' | awk '{ printf \"%.0f\\n\", \$1 * 100 }'")

(defpoll time :interval "10s"
  "date '+%H:%M %b %d, %Y'")

(defwindow top-bar
  :monitor 0
  :windowtype "dock"
  :exclusive true
  :geometry (geometry :x "0%"
                      :y "0%"
                      :width "100%"
                      :height "40px"
                      :anchor "top center")
  :reserve (struts :side "top" :distance "4%")
  (bar))
